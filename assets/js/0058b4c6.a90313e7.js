"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/overview","docId":"overview","unlisted":false},{"type":"category","label":"Chapter 1","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1 Introduction to Robot Framework","href":"/docs/chapter-01/overview","docId":"chapter-01/overview","unlisted":false},{"type":"link","label":"1.1 Purpose / Use Cases","href":"/docs/chapter-01/purpose","docId":"chapter-01/purpose","unlisted":false},{"type":"link","label":"1.2 Architecture of Robot Framework","href":"/docs/chapter-01/architecture","docId":"chapter-01/architecture","unlisted":false},{"type":"link","label":"1.3 Basic Syntax & Structure","href":"/docs/chapter-01/syntax","docId":"chapter-01/syntax","unlisted":false},{"type":"link","label":"1.4 Specification Styles","href":"/docs/chapter-01/styles","docId":"chapter-01/styles","unlisted":false},{"type":"link","label":"1.5 Organization and Licensing","href":"/docs/chapter-01/organization","docId":"chapter-01/organization","unlisted":false}]},{"type":"category","label":"Chapter 2","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"2 Getting Started with Robot Framework","href":"/docs/chapter-02/overview","docId":"chapter-02/overview","unlisted":false},{"type":"link","label":"2.1 Suite File & Tree Structure","href":"/docs/chapter-02/suitefile","docId":"chapter-02/suitefile","unlisted":false},{"type":"link","label":"2.2 Basic Suite File Syntax","href":"/docs/chapter-02/suitefile_syntax","docId":"chapter-02/suitefile_syntax","unlisted":false},{"type":"link","label":"2.3 Executing Robot","href":"/docs/chapter-02/executing","docId":"chapter-02/executing","unlisted":false},{"type":"link","label":"2.4 Keyword Imports","href":"/docs/chapter-02/keyword_imports","docId":"chapter-02/keyword_imports","unlisted":false},{"type":"link","label":"2.5 Keyword Interface and Documentation","href":"/docs/chapter-02/keyword_interface","docId":"chapter-02/keyword_interface","unlisted":false},{"type":"link","label":"2.6 Writing Test|Task and Calling Keywords","href":"/docs/chapter-02/writing_test","docId":"chapter-02/writing_test","unlisted":false}]},{"type":"category","label":"Chapter 3","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"3 Keyword Design, Variables, and Resource Files","href":"/docs/chapter-03/overview","docId":"chapter-03/overview","unlisted":false},{"type":"link","label":"3.1 Resource File Structure","href":"/docs/chapter-03/resource_file","docId":"chapter-03/resource_file","unlisted":false},{"type":"link","label":"3.2 Variables","href":"/docs/chapter-03/variables","docId":"chapter-03/variables","unlisted":false},{"type":"link","label":"3.3 User Keyword Definition & Arguments","href":"/docs/chapter-03/user_keyword","docId":"chapter-03/user_keyword","unlisted":false},{"type":"link","label":"3.4 Using Data-Driven Specification","href":"/docs/chapter-03/datadriven","docId":"chapter-03/datadriven","unlisted":false},{"type":"link","label":"3.5 Advanced Importing of Keywords and Naming Conflicts","href":"/docs/chapter-03/advanced_importing","docId":"chapter-03/advanced_importing","unlisted":false}]},{"type":"category","label":"Chapter 4","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"4 Advanced Structuring and Execution","href":"/docs/chapter-04/overview","docId":"chapter-04/overview","unlisted":false},{"type":"link","label":"4.1 Setups (Suite, Test|Task, Keyword)","href":"/docs/chapter-04/setups","docId":"chapter-04/setups","unlisted":false},{"type":"link","label":"4.2 Teardowns (Suite, Test|Task, Keyword)","href":"/docs/chapter-04/teardowns","docId":"chapter-04/teardowns","unlisted":false},{"type":"link","label":"4.3 Initialization Files","href":"/docs/chapter-04/init_files","docId":"chapter-04/init_files","unlisted":false},{"type":"link","label":"4.4 Test|Task Tags and Filtering Execution","href":"/docs/chapter-04/tags","docId":"chapter-04/tags","unlisted":false},{"type":"link","label":"4.5 SKIP Test|Task Status","href":"/docs/chapter-04/skip","docId":"chapter-04/skip","unlisted":false}]},{"type":"category","label":"Chapter 5","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"5 Exploring Advanced Constructs","href":"/docs/chapter-05/overview","docId":"chapter-05/overview","unlisted":false},{"type":"link","label":"5.1 Advanced Variables","href":"/docs/chapter-05/advanced_variables","docId":"chapter-05/advanced_variables","unlisted":false},{"type":"link","label":"5.2 Control Structures","href":"/docs/chapter-05/control_structures","docId":"chapter-05/control_structures","unlisted":false}]},{"type":"link","label":"Glossary","href":"/docs/glossary/","docId":"glossary/Glossary","unlisted":false},{"type":"link","label":"Learning Objectives","href":"/docs/learning_objectives","docId":"learning_objectives","unlisted":false}]},"docs":{"chapter-01/architecture":{"id":"chapter-01/architecture","title":"1.2 Architecture of Robot Framework","description":"Robot Framework is an open-source automation framework that allows you to build automation scripts for testing and RPA (Robotic Process Automation).","sidebar":"tutorialSidebar"},"chapter-01/organization":{"id":"chapter-01/organization","title":"1.5 Organization and Licensing","description":"1.5.1 Open Source License","sidebar":"tutorialSidebar"},"chapter-01/overview":{"id":"chapter-01/overview","title":"1 Introduction to Robot Framework","description":"The upcoming chapters provide a concise overview of Robot Framework, including its core structure, use cases in test automation and Robotic Process Automation (RPA), and key specification styles like keyword-driven and behavior-driven testing. You\'ll learn about its architecture, syntax, and how test cases and tasks are organized. Additionally, the chapters explain the open-source licensing under Apache 2.0, the role of the Robot Framework Foundation in maintaining the ecosystem, and the foundational web resources available for further exploration and contributions.","sidebar":"tutorialSidebar"},"chapter-01/purpose":{"id":"chapter-01/purpose","title":"1.1 Purpose / Use Cases","description":"Recall the two main use cases of Robot Framework","sidebar":"tutorialSidebar"},"chapter-01/styles":{"id":"chapter-01/styles","title":"1.4 Specification Styles","description":"Recall the three specification styles of Robot Framework","sidebar":"tutorialSidebar"},"chapter-01/syntax":{"id":"chapter-01/syntax","title":"1.3 Basic Syntax & Structure","description":"Recall the key attributes of the syntax that makes Robot Framework simple and human-readable","sidebar":"tutorialSidebar"},"chapter-02/executing":{"id":"chapter-02/executing","title":"2.3 Executing Robot","description":"Recall the three components of the Robot Framework CLI.","sidebar":"tutorialSidebar"},"chapter-02/keyword_imports":{"id":"chapter-02/keyword_imports","title":"2.4 Keyword Imports","description":"\x3c!-- To use Keywords that are not part of BuiltIn, which is always imported invisibly, you must import keywords into the current scope. Basically Two different sources of keywords.","sidebar":"tutorialSidebar"},"chapter-02/keyword_interface":{"id":"chapter-02/keyword_interface","title":"2.5 Keyword Interface and Documentation","description":"Understand the structure of keyword interfaces and how to interpret keyword documentation.","sidebar":"tutorialSidebar"},"chapter-02/overview":{"id":"chapter-02/overview","title":"2 Getting Started with Robot Framework","description":"This chapter introduces participants to the foundational concepts of Robot Framework.","sidebar":"tutorialSidebar"},"chapter-02/suitefile":{"id":"chapter-02/suitefile","title":"2.1 Suite File & Tree Structure","description":"Understand which files and directories are considered suites and how they are structured in a suite tree.","sidebar":"tutorialSidebar"},"chapter-02/suitefile_syntax":{"id":"chapter-02/suitefile_syntax","title":"2.2 Basic Suite File Syntax","description":"\x3c!--","sidebar":"tutorialSidebar"},"chapter-02/writing_test":{"id":"chapter-02/writing_test","title":"2.6 Writing Test|Task and Calling Keywords","description":"Understand how to call imported keywords and how to structure keyword calls.","sidebar":"tutorialSidebar"},"chapter-03/advanced_importing":{"id":"chapter-03/advanced_importing","title":"3.5 Advanced Importing of Keywords and Naming Conflicts","description":"Recall that naming conflicts can arise from the import of multiple resource files.","sidebar":"tutorialSidebar"},"chapter-03/datadriven":{"id":"chapter-03/datadriven","title":"3.4 Using Data-Driven Specification","description":"Understand the basic concept and syntax of Data-Driven Specification","sidebar":"tutorialSidebar"},"chapter-03/overview":{"id":"chapter-03/overview","title":"3 Keyword Design, Variables, and Resource Files","description":"This chapter introduces the essential components of Robot Framework: Keywords, Variables, and Resource Files. These building blocks allow users to create reusable, structured, and maintainable automation solutions. Understanding these concepts is critical for developing efficient automation in both testing and RPA contexts.","sidebar":"tutorialSidebar"},"chapter-03/resource_file":{"id":"chapter-03/resource_file","title":"3.1 Resource File Structure","description":"Resource Files in Robot Framework are used to store reusable keywords,","sidebar":"tutorialSidebar"},"chapter-03/user_keyword":{"id":"chapter-03/user_keyword","title":"3.3 User Keyword Definition & Arguments","description":"User Keywords in Robot Framework allow users to create their own","sidebar":"tutorialSidebar"},"chapter-03/variables":{"id":"chapter-03/variables","title":"3.2 Variables","description":"Understand how variables in Robot Framework are used to store and manage data","sidebar":"tutorialSidebar"},"chapter-04/init_files":{"id":"chapter-04/init_files","title":"4.3 Initialization Files","description":"Recall how to define an Initialization Files and its purpose","sidebar":"tutorialSidebar"},"chapter-04/overview":{"id":"chapter-04/overview","title":"4 Advanced Structuring and Execution","description":"As a Robot Framework automation project expands, the increasing number of tests|tasks adds complexity to the project.","sidebar":"tutorialSidebar"},"chapter-04/setups":{"id":"chapter-04/setups","title":"4.1 Setups (Suite, Test|Task, Keyword)","description":"Recall the purpose and benefits of Setups in Robot Framework","sidebar":"tutorialSidebar"},"chapter-04/skip":{"id":"chapter-04/skip","title":"4.5 SKIP Test|Task Status","description":"Recall the use case and purpose of skipping tests|tasks in Robot Framework","sidebar":"tutorialSidebar"},"chapter-04/tags":{"id":"chapter-04/tags","title":"4.4 Test|Task Tags and Filtering Execution","description":"Recall the purpose of Test|Task Tags in Robot Framework","sidebar":"tutorialSidebar"},"chapter-04/teardowns":{"id":"chapter-04/teardowns","title":"4.2 Teardowns (Suite, Test|Task, Keyword)","description":"Understand the different levels where and how Teardowns can be defined and when they are executed","sidebar":"tutorialSidebar"},"chapter-05/advanced_variables":{"id":"chapter-05/advanced_variables","title":"5.1 Advanced Variables","description":"Variables in Robot Framework, and in programming languages in general, can be more complex and can store various types of data.","sidebar":"tutorialSidebar"},"chapter-05/control_structures":{"id":"chapter-05/control_structures","title":"5.2 Control Structures","description":"Robot Framework is a Turing-complete language and supports all common control structures, including IF-Statements, FOR-Loops, WHILE-Loops and more.","sidebar":"tutorialSidebar"},"chapter-05/overview":{"id":"chapter-05/overview","title":"5 Exploring Advanced Constructs","description":"This chapter introduces more advanced constructs of Robot Framework.","sidebar":"tutorialSidebar"},"glossary/Glossary":{"id":"glossary/Glossary","title":"Glossary","description":"| Term                                            | Definition                                                                                                                          |","sidebar":"tutorialSidebar"},"learning_objectives":{"id":"learning_objectives","title":"Learning Objectives","description":"| ID | K-Level | Content |","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Introduction","description":"This syllabus serves as the foundation for the \\"Robot Framework Certified Professional\xae\\" (RFCP) exam and training.","sidebar":"tutorialSidebar"}}}}')}}]);