"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[291],{7631:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"chapter-03/user_keyword","title":"3.3 User Keyword Definition & Arguments","description":"User Keywords in Robot Framework allow users to create their own","source":"@site/docs/chapter-03/03_user_keyword.md","sourceDirName":"chapter-03","slug":"/chapter-03/user_keyword","permalink":"/docs/chapter-03/user_keyword","draft":false,"unlisted":false,"editUrl":"https://github.com/robotframework/robotframework-RFCP-syllabus/edit/docusaurus/website/docs/chapter-03/03_user_keyword.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"3.2 Variables","permalink":"/docs/chapter-03/variables"},"next":{"title":"3.4 Using Data-Driven Specification","permalink":"/docs/chapter-03/datadriven"}}');var i=s(4848),r=s(8453);const o={},a="3.3 User Keyword Definition & Arguments",d={},l=[{value:"3.3.1 <code>*** Keywords ***</code> Section",id:"331--keywords--section",level:2},{value:"3.3.2 User Keyword Names",id:"332-user-keyword-names",level:2},{value:"3.3.3 User Keyword Settings",id:"333-user-keyword-settings",level:2},{value:"3.3.4 User Keyword Documentation",id:"334-user-keyword-documentation",level:2},{value:"3.3.5 User Keyword Arguments",id:"335-user-keyword-arguments",level:2},{value:"3.3.5.1 Defining Mandatory Arguments",id:"3351-defining-mandatory-arguments",level:3},{value:"3.3.5.2 Defining Optional Arguments",id:"3352-defining-optional-arguments",level:3},{value:"3.3.5.3 Defining Embedded Arguments",id:"3353-defining-embedded-arguments",level:3},{value:"3.3.5.4 Other Argument Kinds",id:"3354-other-argument-kinds",level:3},{value:"3.3.6 RETURN Statement",id:"336-return-statement",level:2},{value:"3.3.7 Keyword Conventions",id:"337-keyword-conventions",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"33-user-keyword-definition--arguments",children:"3.3 User Keyword Definition & Arguments"})}),"\n",(0,i.jsxs)(n.p,{children:["User Keywords in Robot Framework allow users to create their own\nkeywords by combining existing keywords into reusable higher-level actions.\nThey help improve readability, maintainability, and modularity in\nautomation by abstracting complex sequences into named actions.\nUser Keywords are defined syntactically very similarly to tests|tasks\nand are defined in the ",(0,i.jsx)(n.code,{children:"*** Keywords ***"})," section of a suite file or resource file."]}),"\n",(0,i.jsxs)(n.h2,{id:"331--keywords--section",children:["3.3.1 ",(0,i.jsx)(n.code,{children:"*** Keywords ***"})," Section"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"*** Keywords ***"})," section of suite and resource files\nis indentation-based similar to the ",(0,i.jsx)(n.code,{children:"*** Test Cases ***"})," section.\nThe user keywords defined are unindented, while their body implementation is indented by multiple spaces."]}),"\n",(0,i.jsxs)(n.p,{children:["See these sections for more details about\n",(0,i.jsx)(n.a,{href:"/docs/chapter-02/suitefile_syntax",children:"2.2 Basic Suite File Syntax"}),"\nand ",(0,i.jsx)(n.a,{href:"/docs/chapter-02/writing_test",children:"2.6 Writing Test|Task and Calling Keywords"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This section can be part of suites or resource files.\nWhile keywords defined in suites can solely be used in the suite they are defined in,\nkeywords defined in resource files can be used in any suite that imports these resource files."}),"\n",(0,i.jsx)(n.p,{children:"Example definition of a user keyword:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Keywords ***\nVerify Valid Login\n    [Arguments]    ${exp_full_name}\n    ${version}=    Get Server Version\n    Should Not Be Empty    ${version}\n    ${name}=    Get User Name\n    Should Be Equal    ${name}    ${exp_full_name}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["As a reference for how defined keywords are documented, see ",(0,i.jsx)(n.a,{href:"/docs/chapter-02/keyword_interface",children:"2.5 Keyword Interface and Documentation"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"332-user-keyword-names",children:"3.3.2 User Keyword Names"}),"\n",(0,i.jsx)(n.admonition,{title:"Learning Objectives",type:"lo",children:(0,i.jsx)(n.admonition,{title:"LO-3.3.2",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall the rules how keyword names are matched."})})}),"\n",(0,i.jsx)(n.p,{children:"The names of User Keywords should be descriptive and clear, reflecting the purpose of the keyword.\nWell-named keywords make tests more readable and easier to understand.\nRobot Framework supports Unicode and allows the use of special characters and even Emojis in keyword names."}),"\n",(0,i.jsxs)(n.p,{children:["Keyword names are case-insensitive and can include spaces.\nAlso spaces and underscores will be ignored when matching keyword names.\nSo the keywords ",(0,i.jsx)(n.code,{children:"Login To System"}),", and ",(0,i.jsx)(n.code,{children:"log_into_system"})," are considered identical."]}),"\n",(0,i.jsxs)(n.p,{children:["To identify keywords that shall be executed, Robot Framework uses a matching algorithm that is case-insensitive and ignores spaces and underscores.\nIf then a full match is found, that keyword is used.\nIf no full match is found, the prefixes ",(0,i.jsx)(n.code,{children:"Given"}),", ",(0,i.jsx)(n.code,{children:"When"}),", ",(0,i.jsx)(n.code,{children:"Then"}),", ",(0,i.jsx)(n.code,{children:"And"}),", and ",(0,i.jsx)(n.code,{children:"But"})," (case-insensitive), which are used in Behavior-Driven Specification style, are removed from the called keyword name to find a match.\nIf still no match is found, Robot Framework tries to match the name with keywords that have embedded arguments."]}),"\n",(0,i.jsxs)(n.p,{children:["By default, if not explicitly defined by the library developers, all Library Keywords are named in ",(0,i.jsx)(n.strong,{children:"Title Case"})," with capital letters at the beginning of each word, and spaces between words."]}),"\n",(0,i.jsx)(n.p,{children:"Project may choose a different naming convention for User Keywords, but it is recommended to be consistent across the project for User Keyword names."}),"\n",(0,i.jsx)(n.p,{children:"They are defined without indentation, and the subsequent lines until the next unindented line are considered the body of the keyword.\nThe following topics explain how to structure the body of a keyword."}),"\n",(0,i.jsx)(n.h2,{id:"333-user-keyword-settings",children:"3.3.3 User Keyword Settings"}),"\n",(0,i.jsx)(n.admonition,{title:"Learning Objectives",type:"lo",children:(0,i.jsx)(n.admonition,{title:"LO-3.3.3",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall all available settings and their purpose for User Keywords"})})}),"\n",(0,i.jsx)(n.p,{children:"User keywords can have similar settings as test cases,\nand they have the same square bracket syntax separating them from keyword calls.\nAll available settings are listed below and explained in this section or in sections linked below."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Documentation]"})," Used for setting user keyword documentation. (see ",(0,i.jsx)(n.a,{href:"/docs/chapter-03/user_keyword#334-user-keyword-documentation",children:"3.3.4 User Keyword Documentation"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Arguments]"})," Specifies user keyword arguments to hand over values to the keyword. (see ",(0,i.jsx)(n.a,{href:"/docs/chapter-03/user_keyword#335-user-keyword-arguments",children:"3.3.5 User Keyword Arguments"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Setup]"}),", ",(0,i.jsx)(n.code,{children:"[Teardown]"})," Specify user keyword setup and teardown. (see ",(0,i.jsx)(n.a,{href:"/docs/chapter-04/teardowns",children:"4.2 Teardowns (Suite, Test|Task, Keyword)"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Tags]"})," (*) Sets tags for the keyword, which can be used for filtering in documentation and attribution for post-processing results."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Timeout]"})," (*) Sets the possible user keyword timeout."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[Return]"})," (*) Deprecated."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"(*) The application of these settings are not part of this syllabus."}),"\n",(0,i.jsx)(n.h2,{id:"334-user-keyword-documentation",children:"3.3.4 User Keyword Documentation"}),"\n",(0,i.jsx)(n.admonition,{title:"Learning Objectives",type:"lo",children:(0,i.jsx)(n.admonition,{title:"LO-3.3.4",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall the significance of the first logical line and in keyword documentation for the log file."})})}),"\n",(0,i.jsxs)(n.p,{children:["Each keyword can have a ",(0,i.jsx)(n.code,{children:"[Documentation]"})," setting to provide a description of the keyword's purpose and usage."]}),"\n",(0,i.jsxs)(n.p,{children:["The first logical line, until the first empty row, is used as the ",(0,i.jsx)(n.em,{children:"short documentation"})," of the keyword in the ",(0,i.jsx)(n.code,{children:"log.html"})," test protocol.."]}),"\n",(0,i.jsx)(n.p,{children:"Proper documentation helps maintain clarity, especially in larger projects.\nIt is a good practice to document what the keyword does,\nany important notes regarding its usage,\nand additional information about the arguments it accepts if not self-explanatory."}),"\n",(0,i.jsx)(n.p,{children:"User keywords can be documented in the Robot Framework documentation format.\nThis format allows for the use of wiki-like syntax to format the documentation text."}),"\n",(0,i.jsx)(n.p,{children:"This format includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"*bold*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"_italic_"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"_*bold italic*_"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"`code`"})}),"\n",(0,i.jsx)(n.li,{children:"Tables"}),"\n",(0,i.jsx)(n.li,{children:"Lists"}),"\n",(0,i.jsx)(n.li,{children:"Links"}),"\n",(0,i.jsx)(n.li,{children:"Images"}),"\n",(0,i.jsx)(n.li,{children:"Heading levels"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"335-user-keyword-arguments",children:"3.3.5 User Keyword Arguments"}),"\n",(0,i.jsx)(n.admonition,{title:"Learning Objectives",type:"lo",children:(0,i.jsx)(n.admonition,{title:"LO-3.3.5",type:"K2",children:(0,i.jsx)(n.p,{children:"Understand the purpose and syntax of the [Arguments] setting in User Keywords."})})}),"\n",(0,i.jsxs)(n.p,{children:["User Keywords can accept arguments, which make them more dynamic and reusable in various contexts.\nThe ",(0,i.jsx)(n.code,{children:"[Arguments]"})," setting is used to define the arguments a user keyword expects."]}),"\n",(0,i.jsxs)(n.p,{children:["See also Chapter 2 ",(0,i.jsx)(n.a,{href:"/docs/chapter-02/keyword_interface#252-keyword-arguments",children:"2.5.2 Keyword Arguments"})," for an introduction to argument kinds."]}),"\n",(0,i.jsxs)(n.p,{children:["Arguments are defined by ",(0,i.jsx)(n.code,{children:"[Arguments]"})," followed by the argument names separated by multiple spaces in the syntax of scalar variables."]}),"\n",(0,i.jsxs)(n.p,{children:["Unlike Library Keywords, User Keywords cannot define argument types like ",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"number"}),", etc., as described in the ",(0,i.jsx)(n.a,{href:"/docs/chapter-02/keyword_interface#2528-argument-types",children:"2.5.2.8 Argument Types"})," section."]}),"\n",(0,i.jsx)(n.h3,{id:"3351-defining-mandatory-arguments",children:"3.3.5.1 Defining Mandatory Arguments"}),"\n",(0,i.jsxs)(n.admonition,{title:"Learning Objectives",type:"lo",children:[(0,i.jsx)(n.admonition,{title:"LO-3.3.5.1-1",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall what makes an argument mandatory in a user keyword."})}),(0,i.jsx)(n.admonition,{title:"LO-3.3.5.1-2",type:"K3",children:(0,i.jsx)(n.p,{children:"Define User Keywords with mandatory arguments."})})]}),"\n",(0,i.jsxs)(n.p,{children:["Arguments defined as scalar variable (",(0,i.jsx)(n.code,{children:"${arg}"}),") without a default value are mandatory and must be provided when calling the keyword."]}),"\n",(0,i.jsx)(n.p,{children:"Example that defines a keyword with two arguments:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Keywords ***\nVerify File Contains\n    [Documentation]    Verifies that a file contains a specific text.\n    ...\n    ...    The keyword opens the file specified by the file path and checks if it contains the expected content.\n    [Arguments]    ${file_path}    ${expected_content}\n    ${server_log} =    Get File    ${file_path}\n    Should Contain    ${server_log}    ${expected_content}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["All variables defined in the ",(0,i.jsx)(n.code,{children:"[Arguments]"})," are local to the keyword body and do not exist outside of the keyword."]}),"\n",(0,i.jsx)(n.p,{children:"This keyword may be called in a test case like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Test Cases ***\nCheck Server Log\n    Verify File Contains    server.log    Successfully started\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In that case, the argument ",(0,i.jsx)(n.code,{children:"${file_path}"})," is assigned the value ",(0,i.jsx)(n.code,{children:"server.log"}),", and ",(0,i.jsx)(n.code,{children:"${expected_content}"})," is assigned the value ",(0,i.jsx)(n.code,{children:"Successfully started"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"3352-defining-optional-arguments",children:"3.3.5.2 Defining Optional Arguments"}),"\n",(0,i.jsxs)(n.admonition,{title:"Learning Objectives",type:"lo",children:[(0,i.jsx)(n.admonition,{title:"LO-3.3.5.2-1",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall how to define optional arguments in a user keyword."})}),(0,i.jsx)(n.admonition,{title:"LO-3.3.5.2-2",type:"K3",children:(0,i.jsx)(n.p,{children:"Define User Keywords with optional arguments."})})]}),"\n",(0,i.jsxs)(n.p,{children:["Optional arguments are defined by assigning default values to them in the ",(0,i.jsx)(n.code,{children:"[Arguments]"})," setting.\nAll optional arguments must be defined after all mandatory arguments."]}),"\n",(0,i.jsxs)(n.p,{children:["Default values are assigned using an equal sign (",(0,i.jsx)(n.code,{children:"="}),"),\nfollowed by the default value without any spaces, such as ",(0,i.jsx)(n.code,{children:"${ignore_case}=True"}),",\nwhich would set the string ",(0,i.jsx)(n.code,{children:"True"})," as default."]}),"\n",(0,i.jsxs)(n.p,{children:["The assigned default values can also include previously defined variables,\nsuch as ",(0,i.jsx)(n.code,{children:"${ignore_case}=${True}"}),", where ",(0,i.jsx)(n.code,{children:"${True}"})," represents the boolean value ",(0,i.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Keywords ***\nVerify File Contains\n    [Documentation]    Verifies that a file contains a specific text.\n    ...\n    ...    The keyword opens the file specified by the ``file_path``\n    ...    and checks if it contains the ``expected_content``.\n    ...\n    ...    By default, the verification is case-insensitive\n    ...    but can be changed with the optional argument ``ignore_case``.\n    [Arguments]    ${file_path}    ${expected_content}    ${encoding}=utf-8   ${ignore_case}=${True}\n    ${server_log} =    Get File    ${file_path}    ${encoding}\n    Should Contain    ${server_log}    ${expected_content}    ignore_case=${ignore_case}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3353-defining-embedded-arguments",children:"3.3.5.3 Defining Embedded Arguments"}),"\n",(0,i.jsxs)(n.admonition,{title:"Learning Objectives",type:"lo",children:[(0,i.jsx)(n.admonition,{title:"LO-3.3.5.3-1",type:"K2",children:(0,i.jsx)(n.p,{children:"Describe how embedded arguments are replaced by actual values during keyword execution."})}),(0,i.jsx)(n.admonition,{title:"LO-3.3.5.3-2",type:"K2",children:(0,i.jsx)(n.p,{children:"Understand the role of embedded arguments in Behavior-Driven Development (BDD) style."})})]}),"\n",(0,i.jsxs)(n.p,{children:["In Robot Framework, ",(0,i.jsx)(n.strong,{children:"embedded arguments"})," allow the inclusion\nof arguments directly within the keyword name itself.\nThis approach is particularly useful for creating\n",(0,i.jsx)(n.strong,{children:"Behavior-Driven Development (BDD)"}),"-style test cases or for\nmaking keyword names more readable and meaningful."]}),"\n",(0,i.jsx)(n.p,{children:"With embedded arguments, placeholders are used within the keyword name,\nwhich are replaced by actual values when the keyword is executed.\nThese arguments are written as scalar variables with dollar signs and curly braces,\nas shown in the following example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Keywords ***\nThe file '${file_name}' should contain '${expected_content}'\n    ${file_content} =    Get File    ${file_name}\n    Should Contain    ${file_content}    ${expected_content}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When this keyword is called, the placeholders ",(0,i.jsx)(n.code,{children:"${file_name}"}),"\nand ",(0,i.jsx)(n.code,{children:"${expected_content}"})," are replaced by the actual values provided in the keyword call.\nFor instance, in the following example,\n",(0,i.jsx)(n.code,{children:"${file_name}"})," is replaced with ",(0,i.jsx)(n.code,{children:"server.log"}),"\nand ",(0,i.jsx)(n.code,{children:"${expected_content}"})," with ",(0,i.jsx)(n.code,{children:"Successfully started"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Test Cases ***\nTest File Content\n    Given the server log level is 'INFO'\n    When the server is started successfully\n    Then the file 'server.log' should contain 'Successfully started'\n"})}),"\n",(0,i.jsx)(n.p,{children:"Quotes around the embedded arguments are treated as regular characters\nwithin the keyword name but can improve readability\nand help distinguish embedded arguments from the rest of the keyword name."}),"\n",(0,i.jsx)(n.p,{children:"Embedded arguments can become problematic when the keyword name becomes overly long or complicated.\nTo address this, a mix of embedded arguments and regular arguments can be used.\nThis approach can help manage more complex data structures and enhance readability."}),"\n",(0,i.jsx)(n.p,{children:"Example of mixed embedded and regular arguments:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Test Cases ***\nEmbedded and normal arguments\n    Given the user is on the pet selection page\n    When the user adds    2     cat fish\n    And the user sets    3     dogs\n    And the user removes    1     dogs\n    Then the number of cat fish should be    2\n    And the number of dogs should be    count=2\n\n*** Keywords ***\nthe number of ${animals} should be\n    [Arguments]    ${count}\n    ${current_count}    Get Animal Count    ${animals}\n    Should Be Equal As Numbers    ${current_count}    ${count}\n\nthe user ${action}\n    [Arguments]    ${amount}   ${animal}\n    IF    '${action}' == 'adds'\n        Add Items To List    animal_list    ${animal}    ${amount}\n    ELSE IF    '${action}' == 'removes'\n        Remove Items From List    animal_list    ${animal}    ${amount}\n    ELSE IF    '${action}' == 'sets'\n        Set Amount To List    animal_list    ${animal}    ${amount}\n    ELSE\n        Skip    Test skipped due to invalid action\n    END\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3354-other-argument-kinds",children:"3.3.5.4 Other Argument Kinds"}),"\n",(0,i.jsxs)(n.p,{children:["Other argument kinds like ",(0,i.jsx)(n.strong,{children:"Named-Only Arguments"}),", ",(0,i.jsx)(n.strong,{children:"Free Named Arguments"}),", or\n",(0,i.jsx)(n.strong,{children:"Variable Number of Positional Arguments"})," should be known,\nbut their definition and usage are not part of this syllabus."]}),"\n",(0,i.jsx)(n.h2,{id:"336-return-statement",children:"3.3.6 RETURN Statement"}),"\n",(0,i.jsxs)(n.admonition,{title:"Learning Objectives",type:"lo",children:[(0,i.jsx)(n.admonition,{title:"LO-3.3.6-1",type:"K2",children:(0,i.jsxs)(n.p,{children:["Understand how the ",(0,i.jsx)(n.code,{children:"RETURN"})," statement passes data between different keywords."]})}),(0,i.jsx)(n.admonition,{title:"LO-3.3.6-2",type:"K3",children:(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"RETURN"})," statement to return values from a user keyword and assign it to a variable."]})})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"RETURN"})," statement (case-sensitive) in Robot Framework is used to return values from a User Keyword\nto be used in further test steps or stored in variables.\nThis allows test execution to pass data between different keywords."]}),"\n",(0,i.jsx)(n.p,{children:"It can return one or more values.\nIf more than one value is returned, they can either be assigned\nto multiple variables or stored as a list in a single variable."}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-robotframework",children:"*** Keywords ***\nGet File Name From Path\n    [Arguments]    ${file_path}\n    ${path}    ${file} =    Split Path    ${file_path}\n    RETURN    ${file}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"RETURN"})," statement is normally used at the end of a keyword definition,\nbecause it will end the keyword execution at that point and return to the caller.\nHowever, this behavior can be used to conditionally end a keyword execution early together with an ",(0,i.jsx)(n.code,{children:"IF"})," or ",(0,i.jsx)(n.code,{children:"TRY-EXCEPT"})," statement."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"RETURN"})," statement cannot return a value from a keyword call directly like in other programming languages.\nThe return value must be stored in a variable first and then be returned by the ",(0,i.jsx)(n.code,{children:"RETURN"})," statement."]}),"\n",(0,i.jsx)(n.h2,{id:"337-keyword-conventions",children:"3.3.7 Keyword Conventions"}),"\n",(0,i.jsx)(n.admonition,{title:"Learning Objectives",type:"lo",children:(0,i.jsx)(n.admonition,{title:"LO-3.3.7",type:"K1",children:(0,i.jsx)(n.p,{children:"Recall the naming conventions for user keywords."})})}),"\n",(0,i.jsx)(n.p,{children:"When defining User Keywords, it is recommended to follow conventions to ensure consistency and readability across the project.\nThese may be taken from community best practices or defined within the project team."}),"\n",(0,i.jsx)(n.p,{children:"Keyword Conventions should contain agreements on:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Naming Case"}),": Which case shall be used? (i.e. ",(0,i.jsx)(n.code,{children:"Title Case"}),", ",(0,i.jsx)(n.code,{children:"camelCase"}),", ",(0,i.jsx)(n.code,{children:"snake_case"}),", ",(0,i.jsx)(n.code,{children:"kebab-case"}),", or ",(0,i.jsx)(n.code,{children:"sentence case"}),", etc. ) (from a readability perspective, ",(0,i.jsx)(n.code,{children:"Title Case"})," or ",(0,i.jsx)(n.code,{children:"Sentence case"})," are recommended)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Grammatical Form/Mood"}),": Which form shall be used for actions and verifications/assertions? (i.e. ",(0,i.jsx)(n.code,{children:"Imperative"})," for both like ",(0,i.jsx)(n.code,{children:"Click Button"}),", ",(0,i.jsx)(n.code,{children:"Verify Text"}),". Or i.e. ",(0,i.jsx)(n.code,{children:"Declarative"}),"/",(0,i.jsx)(n.code,{children:"Indicative"})," for assertions like ",(0,i.jsx)(n.code,{children:"Text Should Be"}),", ",(0,i.jsx)(n.code,{children:"Element Should Be Visible"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Word/Character Count"}),": How man words or characters shall be used in a keyword name? (i.e. less than 7 words)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Argument Count"}),": How many arguments shall a keyword have? (i.e. less than 5)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": How shall the documentation be structured and which information shall be included or is it required at all?"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);