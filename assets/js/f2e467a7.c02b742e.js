"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[757],{8227:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"chapter-04/init_files","title":"4.3 Initialization Files","description":"Recall how to define an Initialization Files and its purpose","source":"@site/docs/chapter-04/03_init_files.md","sourceDirName":"chapter-04","slug":"/chapter-04/init_files","permalink":"/robotframework-RFCP-syllabus/docs/chapter-04/init_files","draft":false,"unlisted":false,"editUrl":"https://github.com/robotframework/robotframework-RFCP-syllabus/edit/docusaurus/website/docs/chapter-04/03_init_files.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"4.2 Teardowns (Suite, Test|Task, Keyword)","permalink":"/robotframework-RFCP-syllabus/docs/chapter-04/teardowns"},"next":{"title":"4.4 Test|Task Tags and Filtering Execution","permalink":"/robotframework-RFCP-syllabus/docs/chapter-04/tags"}}');var s=t(4848),a=t(8453);const o={},r="4.3 Initialization Files",l={},d=[{value:"4.3.1 Purpose of Initialization Files",id:"431-purpose-of-initialization-files",level:2},{value:"4.3.2 Suite Setup and Suite Teardown of Initialization Files",id:"432-suite-setup-and-suite-teardown-of-initialization-files",level:2},{value:"4.3.3 Allowed Sections in Initialization Files",id:"433-allowed-sections-in-initialization-files",level:2},{value:"4.3.4 Example of an Initialization File",id:"434-example-of-an-initialization-file",level:2}];function c(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"43-initialization-files",children:"4.3 Initialization Files"})}),"\n",(0,s.jsx)(i.admonition,{title:"Learning Objectives",type:"lo",children:(0,s.jsx)(i.admonition,{title:"LO-4.3",type:"K1",children:(0,s.jsx)(i.p,{children:"Recall how to define an Initialization Files and its purpose"})})}),"\n",(0,s.jsxs)(i.p,{children:["As Robot Framework automation projects grow, organizing tests|tasks into directories becomes essential for managing complexity and maintaining a clear structure.\nWhen suites are created from directories, these directories can contain multiple suites and tests|tasks, forming a hierarchical suite structure.\nHowever, directories alone cannot hold suite-level settings or information.\nTo address this, Robot Framework uses ",(0,s.jsx)(i.strong,{children:"initialization files"}),", which allow you to define suite-level settings for directories."]}),"\n",(0,s.jsxs)(i.p,{children:["An ",(0,s.jsx)(i.strong,{children:"initialization file"})," is a file named ",(0,s.jsx)(i.code,{children:"__init__.robot"})," placed inside a directory that acts as a suite.\nThis file can contain suite-level settings that apply to the directory suite."]}),"\n",(0,s.jsx)(i.h2,{id:"431-purpose-of-initialization-files",children:"4.3.1 Purpose of Initialization Files"}),"\n",(0,s.jsx)(i.p,{children:"Initialization files enable you to:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Define ",(0,s.jsx)(i.code,{children:"Suite Setup"})," and ",(0,s.jsx)(i.code,{children:"Suite Teardown"})," keywords for the directory suite."]}),"\n",(0,s.jsxs)(i.li,{children:["Set the name of the suite with the ",(0,s.jsx)(i.code,{children:"Name"})," setting if it should be different from the directory name."]}),"\n",(0,s.jsxs)(i.li,{children:["Specify suite-level settings such as ",(0,s.jsx)(i.code,{children:"Documentation"})," and ",(0,s.jsx)(i.code,{children:"Metadata"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Set default ",(0,s.jsx)(i.code,{children:"Test Setup"}),", ",(0,s.jsx)(i.code,{children:"Test Teardown"}),", ",(0,s.jsx)(i.code,{children:"Test Tags"}),", and ",(0,s.jsx)(i.code,{children:"Test Timeout"})," for all tests|tasks within the directory (these can be overridden/extended in lower-level suites or tests|tasks)."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"432-suite-setup-and-suite-teardown-of-initialization-files",children:"4.3.2 Suite Setup and Suite Teardown of Initialization Files"}),"\n",(0,s.jsx)(i.admonition,{title:"Learning Objectives",type:"lo",children:(0,s.jsx)(i.admonition,{title:"LO-4.3.2",type:"K2",children:(0,s.jsx)(i.p,{children:"Understand the execution order of Suite Setup and Suite Teardown in Initialization Files and their sub-suites and tests|tasks"})})}),"\n",(0,s.jsxs)(i.p,{children:["As previously explained, ",(0,s.jsx)(i.strong,{children:"Suite Setup"})," and ",(0,s.jsx)(i.strong,{children:"Suite Teardown"})," are used to prepare and clean up the environment before and after a suite's execution.\nInitialization files provide a centralized place to define these setups and teardowns for all sub-suites and their tests|tasks within a directory structure.\nThus, it is possible to define one Suite Setup that is executed at the very start of the execution before any other Suite Setup, Test|Task Setup, and Test|Task is executed.\nThe Suite Teardown of an initialization file is executed after all sub-suites in the directory and their tests|tasks have been completed."]}),"\n",(0,s.jsx)(i.h2,{id:"433-allowed-sections-in-initialization-files",children:"4.3.3 Allowed Sections in Initialization Files"}),"\n",(0,s.jsx)(i.admonition,{title:"Learning Objectives",type:"lo",children:(0,s.jsx)(i.admonition,{title:"LO-4.3.3",type:"K1",children:(0,s.jsx)(i.p,{children:"Recall the allowed sections and their content in Initialization Files"})})}),"\n",(0,s.jsx)(i.p,{children:"Initialization files have the same structure and syntax as regular suite files but with some limitations.\nThe following sections are allowed in initialization files:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"*** Settings ***"})," Section (required)"]}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Name"}),": Set a custom name for the suite directory."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Documentation"}),": Provide documentation for the suite."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Metadata"}),": Add metadata to the suite."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Suite Setup"}),": Define a keyword to be executed before any tests|tasks or child suites."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Suite Teardown"}),": Define a keyword to be executed after all tests|tasks and child suites have completed."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Test Setup"}),"|",(0,s.jsx)(i.code,{children:"Task Setup"}),": Set a default setup keyword for all tests|tasks in the suite (can be overridden in lower-level suites or tests|tasks)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Test Teardown"}),"|",(0,s.jsx)(i.code,{children:"Task Teardown"}),": Set a default teardown keyword for all tests|tasks in the suite (can be overridden in lower-level suites or tests|tasks)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Test Timeout"}),"|",(0,s.jsx)(i.code,{children:"Task Timeout"}),": Define a default timeout for all tests|tasks in the suite (can be overridden in lower-level suites or tests|tasks)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Test Tags"}),"|",(0,s.jsx)(i.code,{children:"Task Tags"}),": Assign tags to all tests|tasks in the suite (applied recursively to all lower-level suites and tests|tasks and can be extended or reduced there)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Library"}),", ",(0,s.jsx)(i.code,{children:"Resource"}),", ",(0,s.jsx)(i.code,{children:"Variables"}),": Import necessary libraries, resource files, or variable files."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Keyword Tags"}),": Assign tags to all keywords in the local ",(0,s.jsx)(i.code,{children:"*** Keywords ***"})," section."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"*** Variables ***"})," Section (optional)"]}),":"]}),"\n",(0,s.jsx)(i.p,{children:"Define variables that are available to the initialization file."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"*** Keywords ***"})," Section (optional)"]}),":"]}),"\n",(0,s.jsx)(i.p,{children:"Define keywords that are available to the initialization file for Suite Setup, Suite Teardown, Test Setup, or Test Teardown."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"*** Comments ***"})," Section (optional)"]}),":"]}),"\n",(0,s.jsx)(i.p,{children:"Add comments to the initialization file."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Important Note"}),": Variables and keywords defined or imported in the initialization file are ",(0,s.jsx)(i.strong,{children:"not"})," available to lower-level suites or tests|tasks.\nThey are local to the initialization file itself.\nTo share variables or keywords across multiple suites or tests|tasks,\nuse resource files and import them where needed."]}),"\n",(0,s.jsx)(i.h2,{id:"434-example-of-an-initialization-file",children:"4.3.4 Example of an Initialization File"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-robotframework",children:"*** Settings ***\nDocumentation    Initialization file for the Sample Suite\nSuite Setup      Initialize Environment\nSuite Teardown   Cleanup Environment\n\n\n*** Variables ***\n${BASE_URL}      http://example.com\n\n\n*** Keywords ***\nInitialize Environment\n    Start Server\n    Set Base URL            ${BASE_URL}\n    Import Dataset          ${BASE_URL}/imports    dataset=Config_C3\n    Verify Server Status    ${BASE_URL}   status=OK\n\nCleanup Environment\n    Reset Database\n    Stop Server\n"})})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>r});var n=t(6540);const s={},a=n.createContext(s);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);