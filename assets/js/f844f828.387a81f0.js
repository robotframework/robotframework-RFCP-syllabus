"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[165],{2806:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"glossary/Glossary","title":"Glossary","description":"| Term                                            | Definition                                                                                                                          |","source":"@site/docs/glossary/Glossary.md","sourceDirName":"glossary","slug":"/glossary/","permalink":"/robotframework-RFCP-syllabus/docs/glossary/","draft":false,"unlisted":false,"editUrl":"https://github.com/robotframework/robotframework-RFCP-syllabus/edit/docusaurus/website/docs/glossary/Glossary.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"5.2 Control Structures","permalink":"/robotframework-RFCP-syllabus/docs/chapter-05/control_structures"},"next":{"title":"Learning Objectives","permalink":"/robotframework-RFCP-syllabus/docs/learning_objectives"}}');var n=s(4848),i=s(8453);const o={},d="Glossary",c={},a=[];function l(e){const t={h1:"h1",header:"header",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Term"}),(0,n.jsx)(t.th,{children:"Definition"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Behavior-Driven"})}),(0,n.jsx)(t.td,{children:"A testing methodology that encourages collaboration between developers, QA, and non-technical stakeholders to define test cases."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Data-Driven Specification"})}),(0,n.jsx)(t.td,{children:"A testing approach where test cases are executed with multiple sets of data to validate functionality."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Generic Test Automation Architecture (gTAA)"})}),(0,n.jsx)(t.td,{children:"A framework that provides a structured approach to test automation, promoting reusability and maintainability."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Keywords"})}),(0,n.jsx)(t.td,{children:"Reusable functions or actions defined in the test automation framework."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Keyword-Driven"})}),(0,n.jsx)(t.td,{children:"A testing approach where test cases are defined using keywords that represent actions or operations."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Library"})}),(0,n.jsx)(t.td,{children:"A collection of keywords and functions that can be used in test automation."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Libdoc"})}),(0,n.jsx)(t.td,{children:"A tool used to generate keyword documentation for libraries and resource files."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Rebot"})}),(0,n.jsx)(t.td,{children:"The main executable used to execute suites and post-process execution results to generate reports."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Resource Files"})}),(0,n.jsx)(t.td,{children:"Files that contain shared keywords and variables that can be imported into test suites."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Root Suite"})}),(0,n.jsx)(t.td,{children:"The top-level suite that contains all other suites and test cases."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Suite Directory"})}),(0,n.jsx)(t.td,{children:"A directory that contains multiple suite files, which can include test cases and tasks organized hierarchically."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Suite File"})}),(0,n.jsx)(t.td,{children:"A *.robot file that contains at least one test case or task."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Task"})}),(0,n.jsx)(t.td,{children:"A unit of work that can be executed, similar to a test case but typically focused on automation tasks."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Task Suite"})}),(0,n.jsx)(t.td,{children:"Suite files that have at least one task and do not contain any test cases."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Test Automation"})}),(0,n.jsx)(t.td,{children:"The use of software tools to execute tests automatically, reducing manual effort."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Test Cases Section"})}),(0,n.jsx)(t.td,{children:"This section defines the executable elements of a suite, specifically test cases."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Test Suite"})}),(0,n.jsx)(t.td,{children:"Suite files that have at least one test case and do not contain any tasks."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Tasks Section"})}),(0,n.jsx)(t.td,{children:"This section defines the executable elements of a suite, specifically tasks."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Comments Section"})}),(0,n.jsx)(t.td,{children:"This section is used to add comments to the suite file or resource file. All content in this section is ignored by Robot Framework."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Keyword Section"})}),(0,n.jsx)(t.td,{children:"This section allows you to define locally scoped user keywords that can only be used within the same suite where they are defined."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Robot Framework Sections"})}),(0,n.jsx)(t.td,{children:"Different parts of a Robot Framework suite file that organize the content."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Settings Section"})}),(0,n.jsx)(t.td,{children:"This section is used to configure various aspects of the test/task suite."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Variables Section"})}),(0,n.jsx)(t.td,{children:"This section is used to define suite variables that are used in the suite or its tests/tasks or inside their keywords."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>d});var r=s(6540);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);